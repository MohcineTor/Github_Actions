name: Pull Image from Azure Container Registry
description: Pull image from Azure Container Registry
inputs:
  folder:
    description: 'Working-dir folder'
    required: true
    default: 'personal'
  simulator_image_docker_dev:
    description: 'simulator_image_docker_dev'
    required: true
    default: ''
  simulator_version_dev:
    description: 'simulator_version_dev'
    required: true
    default: ''
  simulator_image_docker_pef:
    description: 'simulator_image_docker_perf'
    required: true
    default: ''
  simulator_version_perf:
    description: 'simulator_version_perf'
    required: true
    default: ''
  simulator_image_docker_staging:
    description: 'simulator_image_docker_staging'
    required: true
    default: ''
  simulator_version_staging:
    description: 'simulator_version_staging
    required: true
    default: ''
  platforms:
    description: 'List of platforms to initialize'
    required: true
runs:
  using: "composite"
  steps:
    - name: Pull ACR simulator image
      run: |
        cd ${{ inputs.folder }}
        IFS=',' read -ra platforms_array <<< "${{ inputs.platforms }}"
        for platform in "${platforms_array[@]}"; do
          if [ "$platform" == "${{ env.PLATFORM_ID }}" ] && [ "${{ env.PLATFORM_ID }}" == 'perf' ]; then 
            babylon azure acr pull -c ${{ env.CONTEXT_ID }} -p ${{ env.PLATFORM_ID }} --image ${{ inputs.simulator_image_docker_perf }}:${{ inputs.simulator_version_perf }}
          elif [ "$platform" == "${{ env.PLATFORM_ID }}" ] && [ "${{ env.PLATFORM_ID }}" == 'staging' ]; then 
            babylon azure acr pull -c ${{ env.CONTEXT_ID }} -p ${{ env.PLATFORM_ID }} --image ${{ inputs.simulator_image_docker_staging }}:${{ inputs.simulator_version_staging }}
          elif [ "$platform" == "${{ env.PLATFORM_ID }}" ] && [ "${{ env.PLATFORM_ID }}" == 'dev' ]; then
            babylon azure acr pull -c ${{ env.CONTEXT_ID }} -p ${{ env.PLATFORM_ID }} --image ${{ inputs.simulator_image_docker_dev }}:${{ inputs.simulator_version_dev }}
          fi
        done
      shell: bash
